{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","Object","keys","data","types","selectedType","setSelectedType","atkSpeed","damage","hull","stats","setStats","useEffect","console","log","handleOnClick","e","newStats","target","value","className","onChange","map","type","onClick","item","progress","requirements","reqPassed","style","height","src","process","icon","alt","name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAuEeA,MAnEf,WAAgB,IAAD,EACaC,mBAASC,OAAOC,KAAKC,IADlC,mBACNC,EADM,aAE2BJ,mBAASI,EAAQA,EAAM,GAAK,KAFvD,mBAENC,EAFM,KAEQC,EAFR,OAGaN,mBAAS,CAACO,SAAU,EAAGC,OAAQ,EAAGC,KAAM,IAHrD,mBAGNC,EAHM,KAGCC,EAHD,KAKbC,qBAAU,WACRC,QAAQC,IAAI,WACZ,CAACJ,IAEH,IAAMK,EAAgB,SAACC,GACrB,IAAMC,EAAQ,eAAOP,GACrBO,EAASD,EAAEE,OAAOC,OAASF,EAASD,EAAEE,OAAOC,OAAS,EACtDR,EAASM,IAGX,OACE,sBAAKG,UAAU,MAAf,UACE,wBAAQD,MAAOd,EAAcgB,SAAU,SAACL,GAAD,OAAOV,EAAgBU,EAAEE,OAAOC,QAAvE,SACIf,EAAMkB,KAAI,SAAAC,GAAI,OAAI,wBAAmBJ,MAAOI,EAA1B,SAAiCA,GAApBA,QAEnC,sBAAKH,UAAU,iBAAf,UACE,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,cAAf,UACE,sBAAKA,UAAU,mBAAf,4BAAkDV,EAAMH,YACxD,sBAAKa,UAAU,mBAAf,sBAA4CV,EAAMF,UAClD,sBAAKY,UAAU,mBAAf,oBAA0CV,EAAMD,WAElD,sBAAKW,UAAU,aAAf,UACE,wBAAQA,UAAU,cAAcD,MAAM,WAAWK,QAAS,SAACR,GAAD,OAAOD,EAAcC,IAA/E,eACA,wBAAQI,UAAU,cAAcD,MAAM,SAASK,QAAS,SAACR,GAAD,OAAOD,EAAcC,IAA7E,eACA,wBAAQI,UAAU,cAAcD,MAAM,OAAOK,QAAS,SAACR,GAAD,OAAOD,EAAcC,IAA3E,qBAIJ,qBAAKI,UAAU,OAAf,SAEEjB,EAAKE,GAAciB,KAAK,SAAAG,GACtB,IAAMC,EAAW,CACfnB,SAA2B,IAAjBG,EAAMH,SAAiBkB,EAAKE,aAAapB,SACnDC,OAAuB,IAAfE,EAAMF,OAAeiB,EAAKE,aAAanB,OAC/CC,KAAmB,IAAbC,EAAMD,KAAagB,EAAKE,aAAalB,MAEvCmB,EAAYF,EAASnB,UAAY,KAAOmB,EAASlB,QAAU,KAAOkB,EAASjB,MAAQ,IAEzF,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAS,wBAAmBQ,EAAY,UAAY,IAAzD,WACKA,GACD,sBAAKR,UAAU,UAAf,UACE,qBAAKA,UAAU,YAAYS,MAAO,CAACC,OAAO,GAAD,OAAKJ,EAASnB,SAAd,QACzC,qBAAKa,UAAU,YAAYS,MAAO,CAACC,OAAO,GAAD,OAAKJ,EAASlB,OAAd,QACzC,qBAAKY,UAAU,YAAYS,MAAO,CAACC,OAAO,GAAD,OAAKJ,EAASjB,KAAd,WAG7C,qBAAKsB,IAAKC,qBAAsCP,EAAKQ,KAAMC,IAAKT,EAAKU,UAEvE,qBAAKf,UAAU,cAAf,SAA8BK,EAAKU,SAXCV,EAAKU,kBCrC1CC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.c9ff8d4d.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport './App.css';\r\nimport data from './data.json'\r\n\r\nfunction App() {\r\n  const [types, setTypes] = useState(Object.keys(data))\r\n  const [selectedType, setSelectedType] = useState(types ? types[0] : '')\r\n  const [stats, setStats] = useState({atkSpeed: 1, damage: 1, hull: 1})\r\n\r\n  useEffect(() => {\r\n    console.log('stats')\r\n  },[stats])\r\n\r\n  const handleOnClick = (e) => {\r\n    const newStats = {...stats}\r\n    newStats[e.target.value] = newStats[e.target.value] + 1\r\n    setStats(newStats)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <select value={selectedType} onChange={(e) => setSelectedType(e.target.value)}>\r\n        { types.map(type => <option key={type} value={type}>{type}</option>) }\r\n      </select>\r\n      <div className=\"main-container\">\r\n        <div className=\"stats\">\r\n          <div className=\"stats-title\">\r\n            <div className=\"stats-title-text\">Attack Speed : {stats.atkSpeed}</div>\r\n            <div className=\"stats-title-text\">Damage : {stats.damage}</div>\r\n            <div className=\"stats-title-text\">Hull : {stats.hull}</div>\r\n          </div>\r\n          <div className=\"stats-plus\">\r\n            <button className=\"plus-button\" value=\"atkSpeed\" onClick={(e) => handleOnClick(e)}>+</button>\r\n            <button className=\"plus-button\" value=\"damage\" onClick={(e) => handleOnClick(e)}>+</button>\r\n            <button className=\"plus-button\" value=\"hull\" onClick={(e) => handleOnClick(e)}>+</button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"tree\">\r\n        {\r\n          data[selectedType].map( item => {\r\n            const progress = {\r\n              atkSpeed: stats.atkSpeed * 100 / item.requirements.atkSpeed,\r\n              damage: stats.damage * 100 / item.requirements.damage,\r\n              hull: stats.hull * 100 / item.requirements.hull\r\n            }\r\n            const reqPassed = progress.atkSpeed >= 100 && progress.damage >= 100 && progress.hull >= 100\r\n\r\n            return(\r\n              <div className=\"skill-container\" key={item.name}>\r\n                <div className={`img-container ${reqPassed ? \"allowed\" : \"\"}`}>\r\n                  { !reqPassed &&\r\n                    <div className=\"colored\">\r\n                      <div className=\"colored-1\" style={{height: `${progress.atkSpeed}%`}}></div>\r\n                      <div className=\"colored-2\" style={{height: `${progress.damage}%`}}></div>\r\n                      <div className=\"colored-3\" style={{height: `${progress.hull}%`}}></div>\r\n                    </div>\r\n                  }\r\n                  <img src={process.env.PUBLIC_URL + \"./icons/\" + item.icon} alt={item.name} />\r\n                </div>\r\n                <div className=\"img-tooltip\">{item.name}</div>\r\n              </div>\r\n            )}\r\n          )\r\n        }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}